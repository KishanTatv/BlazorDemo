@page "/"
@rendermode InteractiveWebAssembly
@using Blazored.Toast.Configuration

@inject ITokenService tokenService
@inject NavigationManager _navigationManager
@inject IToastService ToastService

<div class="d-flex border-bottom border-4 border-secondary pb-1 mb-3">
    <h2 class="m-0">Dashboard</h2>
</div>

@{
    if (tokenData?.Role == (int)Roles.SuperAdmin || tokenData?.Role == (int)Roles.Admin)
    {
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Daily Updates</h5>
                <h6 class="card-subtitle mb-2 text-muted">Latest News</h6>
                <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <a href="#" class="card-link">Card link</a>
                <a href="#" class="card-link">Another link</a>
            </div>
        </div>

        <br />
        <div class="row">
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Upcoming Exam & Events</h5>
                        <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
                        <a class="btn btn-primary" @onclick="showToastMsg">Go somewhere</a>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-body">
                        <BlazorApp.Client.Shared.Calender Data="Data" >
                        </BlazorApp.Client.Shared.Calender>
                    </div>
                </div>
            </div>
        </div>

    }
    else if (tokenData?.Role == (int)Roles.Teacher)
    {
        <p>Teacher Dash..</p>
    }
    else
    {
        <p>Keep Wait ...!</p>
    }

}

@code {

    private JwtDTO? tokenData;
    private Dictionary<DateTime, object> Data = new Dictionary<DateTime, object>();

    protected override async Task OnInitializedAsync()
    {
        tokenData = tokenService.TokenData;
        if (tokenData == null && OperatingSystem.IsBrowser())
        {
            await GetTokenData();
        }
    }


    public async Task GetTokenData()
    {
        tokenData = await tokenService.GetClaimFromToken();
        if(tokenData == null)
        {
            _navigationManager.NavigateTo(Page_Routes.Login);
        }
        else
        {
            tokenService.SetTokenData(tokenData);
        }
    }

    public bool isSubset(int[] a, int[] b)
    {
        var x = true;
        for(int i=0; i<b.Length; i++){
            if(!a.Any(x => x == b[i])){
                x = false;
            }
        }
        // Your code here
        return x;
    }

    private void showToastMsg()
    {
        ToastService.ShowToast(ToastLevel.Success, "This is a success message!");
    }
}
