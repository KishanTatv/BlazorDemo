@page "/"
@using BlazorApp.Client.Models.Request.Auth
@using BlazorApp.Data.Interfaces.Auth
@rendermode InteractiveWebAssembly
@layout Layout.EmptyLayout

@inject IAuth _auth;
@inject NavigationManager _navigationManager

<div class="login-main-div position-relative vh-100 d-flex flex-column justify-content-center align-items-center">
    <div class="login-container w-25">
        <div class="logo-section text-center">
            <img src="Images/logo.png" alt="Logo" class="w-25 h-50" />
            <h1 style="font-size:30px">School Management System</h1>
        </div>

        <div class="form-section">
            <h3 class="text-center">LogIn</h3>
            <EditForm EditContext="editContext" OnValidSubmit="Login" FormName="loginForm">
                @* <DataAnnotationsValidator /> *@

                <div class="form-group">
                    <label for="username">Username</label>
                    <InputText id="username" class="form-control w-100"
                               @bind-Value="loginModel.Username"
                               @oninput="HandleInputChange"
                               placeholder="Username" />
                    <ValidationMessage For="@(() => loginModel.Username)" />
                </div>

                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText id="password" class="form-control w-100"
                               @bind-Value="loginModel.Password"
                               @oninput="HandleInputChange"
                               Type="password"
                               placeholder="Password" />
                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>

                <br />
                <button type="submit" class="btn btn-primary w-100">Submit</button>
            </EditForm>

        </div>
    </div>

    <footer class="position-absolute bottom-0">
        <p>© TatvaSoft All rights reserved</p>
    </footer>
</div>


@code {
    private EditContext editContext;
    private UserLoginDTO loginModel = new UserLoginDTO();

    protected override void OnInitialized()
    {
        editContext = new EditContext(loginModel);

        editContext.OnFieldChanged += (sender, e) =>
        {
            editContext.NotifyFieldChanged(e.FieldIdentifier);
            StateHasChanged();
        };
    }

    private void HandleInputChange(ChangeEventArgs e)
    {
        editContext?.NotifyValidationStateChanged();
    }

    private async Task Login()
    {
        try
        {
            HttpResponseDTO<List<string>> res = await _auth.Login(loginModel);
                _navigationManager.NavigateTo(Page_Routes.Dashboard);
            if (res.Result && res.Data != null)
            {
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
}
