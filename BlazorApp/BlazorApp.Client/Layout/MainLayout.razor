@using Blazored.Toast.Configuration
@using SMS.Shared.JWTToken
@using SMS.Shared.Loader
@using SMS.Shared.Static.Routes
@using Blazored.Toast
@inherits LayoutComponentBase

@inject NavigationManager _navigationManager
@inject ITokenService tokenService

<Blazored.Toast.BlazoredToasts Position="ToastPosition.TopRight"
Timeout="2"
IconType="IconType.FontAwesome"
SuccessClass="success-toast-override"
SuccessIcon="fa fa-check"
ErrorIcon="fa fa-triangle-exclamation"  />

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a @onclick="LogOutPage">LogOut</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
    <BlazorApp.Client.Shared.Loader />
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code{
    private JwtDTO? tokenData;

    protected override async Task OnInitializedAsync()
    {
        tokenData = tokenService.TokenData;
        if (tokenData == null && OperatingSystem.IsBrowser())
        {
            tokenData = await tokenService.GetClaimFromToken();
        }
    }

    public async Task GetTokenData()
    {
        tokenData = await tokenService.GetClaimFromToken();
        if (tokenData == null)
        {
            _navigationManager.NavigateTo(Page_Routes.Login);
        }
        else
        {
            tokenService.SetTokenData(tokenData);
        }
    }

    private async Task LogOutPage(){
        await tokenService.RemoveTokensAsync();
        _navigationManager.NavigateTo(Page_Routes.Login);
    }

}