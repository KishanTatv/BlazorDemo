@inject ITokenService tokenService
@inject NavigationManager _navigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">SMS</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Dashboard
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="student">
                <span class="bi bi-people-fill-nav-menu" aria-hidden="true"></span> All Student
            </NavLink>
        </div>

        @if (tokenData?.role == (int)Roles.SuperAdmin || tokenData?.role == (int)Roles.Admin){
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="student">
                    <span class="bi bi-staff-fill-nav-menu" aria-hidden="true"></span> Staff
                </NavLink>
            </div>
        }

    </nav>
</div>

@code{
    private JwtDTO? tokenData;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetTokenData();
            StateHasChanged();
        }
    }

    public async Task GetTokenData()
    {
        tokenData = await tokenService.GetClaimFromToken();
        if (tokenData == null)
        {
            _navigationManager.NavigateTo(Page_Routes.Login);
        }
        else
        {
            tokenService.SetTokenData(tokenData);
        }
    }
}
